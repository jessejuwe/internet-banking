{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n\n// Data\nconst account1 = {\n  owner: 'Nagasaki Yuto',\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n\n  movementsDates: [\n    '2019-11-18T21:31:17.178Z',\n    '2019-12-23T07:42:02.383Z',\n    '2020-01-28T09:15:04.904Z',\n    '2020-04-01T10:17:24.185Z',\n    '2020-05-08T14:11:59.604Z',\n    '2022-02-22T17:01:17.194Z',\n    '2022-02-20T23:36:17.929Z',\n    '2022-02-17T10:51:36.790Z',\n  ],\n  currency: 'JPY',\n  locale: 'ja-JP', // de-DE\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n\n  movementsDates: [\n    '2019-11-01T13:15:33.035Z',\n    '2019-11-30T09:48:16.867Z',\n    '2019-12-25T06:04:23.907Z',\n    '2020-01-25T14:18:46.235Z',\n    '2020-02-05T16:33:06.386Z',\n    '2020-04-10T14:43:26.374Z',\n    '2020-06-25T18:49:59.371Z',\n    '2020-07-26T12:01:20.894Z',\n  ],\n  currency: 'USD',\n  locale: 'en-US',\n};\n\nconst account3 = {\n  owner: 'Steven Thomas Williams',\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n\n  movementsDates: [\n    '2019-02-01T13:15:33.035Z',\n    '2020-02-30T09:48:16.867Z',\n    '2020-01-25T06:04:23.907Z',\n    '2021-12-25T14:18:46.235Z',\n    '2021-11-05T16:33:06.386Z',\n    '2022-01-17T14:43:26.374Z',\n    '2022-02-20T18:49:59.371Z',\n    '2022-02-21T12:01:20.894Z',\n  ],\n\n  currency: 'GBP',\n  locale: 'en-GB',\n};\n\nconst account4 = {\n  owner: 'Pierre Jean-Luc',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 4444,\n\n  movementsDates: [\n    '2021-09-01T10:17:24.185Z',\n    '2021-07-08T14:11:59.604Z',\n    '2022-02-15T17:01:17.194Z',\n    '2022-02-20T23:36:17.929Z',\n    '2022-02-17T10:51:36.790Z',\n  ],\n\n  currency: 'EUR',\n  locale: 'fr-FR',\n};\n\nconst accounts = [account1, account2, account3, account4];\n\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\n// TODO\n\n// FUNCTIONS\n\nconst formatMovementDate = (date, locale) => {\n  const calcDaysPassed = (date1, date2) =>\n    Math.round(Math.abs((date2 - date1) / (1000 * 60 * 60 * 24)));\n\n  const daysPassed = calcDaysPassed(new Date(), date);\n  // console.log(daysPassed);\n\n  if (daysPassed === 0) return 'Today';\n  if (daysPassed === 1) return 'Yesterday';\n  if (daysPassed <= 7) return `${daysPassed} days ago`;\n  else return new Intl.DateTimeFormat(locale).format(date);\n};\n\nconst formatCur = (value, locale, currency) => {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n  }).format(value);\n};\n\nconst displayMovements = (currentAccount, sort = false) => {\n  // clear previous content\n  containerMovements.innerHTML = '';\n\n  const movs = sort\n    ? currentAccount.movements.slice().sort((a, b) => a - b)\n    : currentAccount.movements;\n\n  movs.forEach((mov, i) => {\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\n\n    const date = new Date(currentAccount.movementsDates[i]);\n    const displayDate = formatMovementDate(date, currentAccount.locale);\n\n    const formattedMov = formatCur(\n      mov,\n      currentAccount.locale,\n      currentAccount.currency\n    );\n\n    const html = `\n      <div class=\"movements__row\">\n        <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n        <div class=\"movements__date\">${displayDate}</div>\n        <div class=\"movements__value\">${formattedMov}</div>\n      </div>\n      `;\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n\nconst calcDisplayBalance = currentAccount => {\n  currentAccount.balance = currentAccount.movements.reduce(\n    (acc, mov) => acc + mov\n  );\n\n  labelBalance.textContent = formatCur(\n    currentAccount.balance,\n    currentAccount.locale,\n    currentAccount.currency\n  );\n};\n\nconst calcDisplaySummary = currentAccount => {\n  const incomes = currentAccount.movements\n    .filter(mov => mov > 0)\n    .reduce((acc, mov) => acc + mov, 0);\n\n  labelSumIn.textContent = formatCur(\n    incomes,\n    currentAccount.locale,\n    currentAccount.currency\n  );\n\n  const outgoing = currentAccount.movements\n    .filter(mov => mov < 0)\n    .reduce((acc, mov) => acc + mov, 0);\n\n  labelSumOut.textContent = formatCur(\n    Math.abs(outgoing),\n    currentAccount.locale,\n    currentAccount.currency\n  );\n\n  const interest = currentAccount.movements\n    .filter(mov => mov > 0)\n    .map(deposit => deposit * (currentAccount.interestRate / 100))\n    .filter(interest => interest >= 1)\n    .reduce((acc, interest) => acc + interest, 0);\n\n  labelSumInterest.textContent = formatCur(\n    interest,\n    currentAccount.locale,\n    currentAccount.currency\n  );\n};\n\nconst createUsernames = accs => {\n  accs.forEach(acc => {\n    acc.username = acc.owner\n      .toLowerCase()\n      .split(' ')\n      .map((name, i, _) => name.at(0))\n      .join('');\n  });\n\n  console.log(accs);\n};\n\ncreateUsernames(accounts);\n\nconst updateUI = currentAccount => {\n  // Display movements\n  displayMovements(currentAccount);\n\n  // Display balance\n  calcDisplayBalance(currentAccount);\n\n  // Display summary\n  calcDisplaySummary(currentAccount);\n};\n\nconst startLogoutTimer = () => {\n  // set time to 5mins\n  let time = 90;\n\n  const tick = () => {\n    const min = `${Math.trunc(time / 60)}`.padStart(2, 0);\n    const sec = `${time % 60}`.padStart(2, 0);\n\n    // in each funcion call, log the remaining time to the UI\n    labelTimer.textContent = `${min}:${sec}`;\n\n    // when time is at 0 sec, stop timer and log out\n    if (time === 0) {\n      clearInterval(timer);\n      // reset welcome label\n      labelWelcome.textContent = 'Log in to get started';\n      // clear fields\n      inputLoginPin.blur();\n      inputLoginUsername.value = inputLoginPin.value = '';\n      inputTransferAmount.value = inputTransferTo.value = '';\n      inputCloseUsername.value = inputClosePin.value = '';\n      inputLoanAmount.value = '';\n\n      // Hide UI\n      containerApp.style.opacity = 0;\n    }\n\n    // decrease time by 1 sec\n    time--;\n  };\n\n  // call timer every second\n  tick();\n  const timer = setInterval(tick, 1000);\n  return timer;\n};\n\n// Event Handlers\n// LOGIN\n\nlet currentAccount, timer;\n\n// FAKE ALWAYS LOGGED IN\n// currentAccount = account1;\n// updateUI(currentAccount);\n// containerApp.style.opacity = 100;\n//////////////////////////////////////\n\nconst now = new Date();\nlabelDate.textContent = now.toLocaleString();\n\nbtnLogin.addEventListener('click', e => {\n  // prevemt form from dubmitting\n  e.preventDefault();\n\n  currentAccount = accounts.find(\n    acc => acc.username === inputLoginUsername.value\n  );\n\n  // console.log(currentAccount);\n\n  if (currentAccount?.pin === +inputLoginPin.value) {\n    alert(`${currentAccount.owner}, now logged in`);\n    // Display UI and message\n    labelWelcome.textContent = `Welcome back, ${\n      currentAccount.owner.split(' ')[0]\n    }`;\n    containerApp.style.opacity = 100;\n\n    // current date and time\n    const now = new Date();\n    // const locale = navigator.language;\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric',\n      day: 'numeric', // 2-digit\n      // weekday: 'long',\n      month: 'numeric', // long\n      year: 'numeric',\n    };\n    labelDate.textContent = new Intl.DateTimeFormat(\n      currentAccount.locale,\n      options\n    ).format(now);\n    // labelDate.textContent = now.toLocaleString();\n\n    // clear input fields\n    inputLoginUsername.value = inputLoginPin.value = '';\n    inputLoginPin.blur();\n    inputTransferAmount.value = inputTransferTo.value = '';\n    inputCloseUsername.value = inputClosePin.value = '';\n    inputLoanAmount.value = '';\n\n    // Timer\n    if (timer) clearInterval(timer);\n    timer = startLogoutTimer();\n\n    updateUI(currentAccount);\n  } else\n    alert(\n      'User with this login detail does not exist \\n Enter correct username and password'\n    );\n});\n\n// TRANSFER\nbtnTransfer.addEventListener('click', e => {\n  e.preventDefault();\n\n  const amount = +inputTransferAmount.value;\n  const receiverAcc = accounts.find(\n    acc => acc?.username === inputTransferTo.value\n  );\n\n  if (\n    amount > 0 &&\n    receiverAcc &&\n    currentAccount.balance >= amount &&\n    currentAccount.username !== receiverAcc?.username\n  ) {\n    setTimeout(() => {\n      // Doing the transfer\n      currentAccount.movements.push(-amount);\n      receiverAcc.movements.push(amount);\n\n      // adding transfer date\n      currentAccount.movementsDates.push(new Date().toISOString());\n      receiverAcc.movementsDates.push(new Date().toISOString());\n\n      // update UI and clear fields\n      updateUI(currentAccount);\n\n      // clear timer\n      clearInterval(timer);\n      timer = startLogoutTimer();\n\n      // clear fields\n      inputTransferAmount.value = inputTransferTo.value = '';\n      inputCloseUsername.value = inputClosePin.value = '';\n\n      alert(\n        `${formatCur(\n          amount,\n          currentAccount.locale,\n          currentAccount.currency\n        )} Transferred Succesfully to ${receiverAcc.owner}`\n      );\n    }, 1500);\n  } else {\n    alert(`Transfer Invalid`);\n  }\n});\n\n// REQUEST LOAN\nbtnLoan.addEventListener('click', e => {\n  e.preventDefault();\n\n  const amount = Math.floor(inputLoanAmount.value);\n\n  // if the loa amount is greater than 0, and one or more of the deposits is more than 10% of the amount\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= 0.1 * amount)) {\n    inputLoanAmount.value = '';\n    inputCloseUsername.value = inputClosePin.value = '';\n\n    setTimeout(() => {\n      // add movement\n      currentAccount.movements.push(amount);\n\n      // adding loan request date\n      const now = new Date();\n      currentAccount.movementsDates.push(now.toISOString());\n\n      // update UI\n      updateUI(currentAccount);\n\n      // clear timer\n      clearInterval(timer);\n      timer = startLogoutTimer();\n\n      alert(\n        `Loan granted: ${formatCur(\n          amount,\n          currentAccount.locale,\n          currentAccount.currency\n        )}`\n      );\n    }, 3000);\n  } else {\n    alert(\n      `We cannot grant you a loan of ${formatCur(\n        amount,\n        currentAccount.locale,\n        currentAccount.currency\n      )}`\n    );\n  }\n});\n\n// CLOSE ACCOUNT\nbtnClose.addEventListener('click', e => {\n  e.preventDefault();\n\n  const uname = inputCloseUsername.value;\n  const pwd = +inputClosePin.value;\n  const accUname = accounts.find(acc => acc?.username === uname);\n\n  if (uname === currentAccount.username && pwd === currentAccount.pin) {\n    const index = accounts.findIndex(\n      acc => acc.username === currentAccount.username\n    );\n\n    // show index\n    console.log(index);\n\n    // Delete account\n    accounts.splice(index, 1);\n\n    inputLoginUsername.value = inputLoginPin.value = '';\n    inputLoginPin.blur();\n    inputTransferAmount.value = inputTransferTo.value = '';\n    inputCloseUsername.value = inputClosePin.value = '';\n    inputLoanAmount.value = '';\n\n    // Hide UI\n    containerApp.style.opacity = 0;\n\n    console.log('Deleted User');\n  } else {\n    alert('Account not found');\n  }\n});\n\n// SORT VIEW\n\nlet sorted = false;\n\nbtnSort.addEventListener('click', e => {\n  e.preventDefault();\n\n  displayMovements(currentAccount, !sorted);\n  sorted = !sorted;\n});\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\nconst currencies = new Map([\n  ['USD', 'United States dollar'],\n  ['EUR', 'Euro'],\n  ['GBP', 'Pound sterling'],\n]);\n\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\n/////////////////////////////////////////////////\n\nconsole.log('---The new .at method ---');\nconst arrx = [23, 1, 14];\nconsole.log(arrx.at(0));\nconsole.log(arrx.at(-1));\n\nconsole.log(' ');\nconsole.log('--- ForEach method on an Array ---');\n\nconsole.log(movements);\n\nmovements.forEach((mov, i, arr) => {\n  return console.log(\n    `${mov > 0 ? '+' : '-'} You ${\n      mov > 0 ? 'deposited' : 'withdrew'\n    } ${Math.abs(mov)} - transaction ${i + 1}`\n  );\n  if (mov > 0) {\n    console.log(`+ You deposited $${mov} - transaction ${i + 1}`);\n  } else {\n    console.log(`- You withdrew $${Math.abs(mov)} - transaction ${i + 1}`);\n  }\n});\n\nconsole.log(' ');\nconsole.log('--- ForEach method on a Map ---');\n\nconsole.log(currencies);\n\ncurrencies.forEach((value, key, map) => {\n  console.log(`${key}: ${value}`);\n});\n\nconsole.log(' ');\nconsole.log('--- ForEach method on a Set ---');\n\nconst currenciesUnique = new Set(['USD', 'GDP', 'USD', 'EUR', 'EUR']);\nconsole.log(currenciesUnique);\n\ncurrenciesUnique.forEach((value, _, set) => {\n  console.log(`${value}: ${value}`);\n});\n\n// CODING CHALLENGE #1\nconsole.log(' ');\nconsole.log('--- CODING CHALLENGE #1 ---');\n\nconst checkDogs = (dogsJulia, dogsKate) => {\n  const dogsJuliaCorrected = dogsJulia.slice();\n  dogsJuliaCorrected.splice(0, 1);\n  dogsJuliaCorrected.splice(-2);\n\n  const dogs = dogsJuliaCorrected.concat(dogsKate);\n  dogs.forEach((dog, i) => {\n    dog > 3\n      ? console.log(`Dog number ${i + 1} is an adult and is ${dog} years old`)\n      : console.log(`Dog number ${i + 1} is still a puppy 🐶`);\n  });\n};\n\ncheckDogs([3, 5, 2, 12, 7], [4, 1, 15, 8, 3]);\n\n// Data Transformation methods: map, filter, reduce\nconsole.log(' ');\nconsole.log('--- Data Transformation methods: Map ---');\n\nconst euroToUSD = 1.1;\n\nconst movementsUSD = movements.map(mov => mov * euroToUSD);\n\n// movements.push(6000);\nconsole.log(movements);\nconsole.log(movementsUSD);\n\nconst movementsDesc = movements.map(\n  (mov, i, _) =>\n    `${mov > 0 ? '+' : '-'} You ${\n      mov > 0 ? 'deposited' : 'withdrew'\n    } ${Math.abs(mov)} - transaction ${i + 1}`\n);\n\nconsole.log(movementsDesc);\n\nconsole.log(' ');\nconsole.log('--- Data Transformation methods: Filter ---');\n\nconsole.log(movements);\nconst deposit = movements.filter(mov => {\n  return mov > 0;\n  return mov > 0 ? mov : '';\n});\nconsole.log(deposit);\n\nconsole.log(' ');\nconsole.log('--- Data Transformation methods: Reduce ---');\n\n// reduce method takes two args (callback function, original value of the accumulator)\n// callback function takes 4 args (accumulator, currentElement, index, array)\n// accumulator represents what the array boils down to\nconst balance = movements.reduce((accumulator, cur, i, arr) => {\n  console.log(\n    `Iteration ${i + 1}: ${accumulator} ${cur < 0 ? '-' : '+'} ${Math.abs(\n      cur\n    )} = ${accumulator + cur}`\n  );\n  return accumulator + cur;\n}, 160);\nconsole.log(balance);\n\n//getting maximum value with reduce method\n// movements.push(13500);\nconsole.log(movements);\n\nconst max = movements.reduce(\n  (acc, cur, i, arr) => (acc = acc >= cur ? acc : cur),\n  movements[0]\n);\n\nconsole.log(`The maximum number in the array is: ${max}`);\n\n// using reduce to count the number of elements in the array > 1000\nconsole.log(' ');\nconsole.log(accounts.flatMap(acc => acc.movements));\nconst numDeposits1000 = accounts\n  .flatMap(acc => acc.movements)\n  .reduce((count, cur) => (cur >= 1000 ? ++count : count), 0);\n\nconsole.log(\n  `The number of elements in the array > 1000 is: ${numDeposits1000}`\n);\n\n// using reduce to return an object as the value\nconst { deposits, withdrawals } = accounts\n  .flatMap(acc => acc.movements)\n  .reduce(\n    (sums, cur) => {\n      sums[cur > 0 ? 'deposits' : 'withdrawals'] += cur;\n      // cur > 0 ? (sums.deposits += cur) : (sums.withdrawals += cur);\n      return sums;\n    },\n    { deposits: 0, withdrawals: 0 }\n  );\n\nconsole.log(`Total Deposits: ${deposits}€, Total Withdrawals: ${withdrawals}€`);\n\n// CODING CHALLENGE #2\nconsole.log(' ');\nconsole.log('--- CODING CHALLENGE #2 ---');\n\nconst testAgeAlpha = [5, 2, 4, 1, 15, 8, 3];\nconst testAgeBeta = [16, 6, 10, 5, 6, 1, 4];\n\nconst calcAverageHumanAge = ages => {\n  const humanAges = ages.map(age => (age <= 2 ? 2 * age : 16 + age * 4));\n  console.log(`Dog age in human age - [${humanAges.join(', ')}]`);\n\n  const adultDogs = humanAges.filter(age => age >= 18);\n  console.log(`Age of adult dogs - [${adultDogs.join(', ')}]`);\n\n  const babyDogs = humanAges.filter(age => age <= 18);\n  console.log(`Age of baby dogs - [${babyDogs.join(', ')}]`);\n\n  const average = adultDogs.reduce(\n    (acc, age, i, arr) => acc + age / arr.length,\n    0\n  );\n  console.log(`Average age of adult dogs: ${Math.round(average)}`);\n};\n\nconsole.log(`Test Data Alpha - [${testAgeAlpha.join(', ')}]`);\ncalcAverageHumanAge(testAgeAlpha);\n\nconsole.log('');\n\nconsole.log(`Test Data Beta - [${testAgeBeta.join(', ')}]`);\ncalcAverageHumanAge(testAgeBeta);\n\nconsole.log(' ');\nconsole.log('--- Magic of Chaining Methods ---');\n\n// Pipeline\nconst totalDepositsUSD = movements\n  .filter(mov => mov > 0)\n  .map(mov => mov * euroToUSD)\n  .reduce((acc, mov) => acc + mov, 0);\n\nconsole.log(totalDepositsUSD);\n\nconsole.log(' ');\nconsole.log('--- Find Method ---');\n\nconst firstWithdrawl = movements.find(mov => mov < 0);\nconsole.log(movements);\nconsole.log(`First negative element in the array: ${firstWithdrawl}`);\n\nconsole.log(accounts);\n\nconst account = accounts.find(acc => acc.owner === 'Jessica Davis');\nconsole.log(account);\n\nconsole.log(' ');\nconsole.log('--- some Method ---');\n\nconst anyDeposits = movements.some(mov => mov > 0);\nconsole.log(`Is any element in the array > 0: ${anyDeposits}`);\n\nconsole.log(' ');\nconsole.log('--- every Method ---');\n\nconst everyDeposits = movements.every(mov => mov > 0);\nconsole.log(`Is every element in the array > 0: ${everyDeposits}`);\n\nconsole.log(' ');\nconsole.log('--- flat Method ---');\n\nconst arr = [[1, 2, 3], [4, 5, 6], 7, 8];\nconst newArr = arr.flat(); // only goes one-level deep when flatening arrays, unless you specify level of depth as arg\nconsole.log(newArr);\n\nconst arrDeep = [[[1, 2], 3], [4, [5, 6]], 7, 8];\nconst newArrDeep = arrDeep.flat(2);\n\n// calculate the average or total balance of all the clients\nconst overallBalanceAlpha = accounts\n  .map(acc => acc.movements)\n  .flat()\n  .reduce((acc, cur, i, _) => acc + cur, 0);\n\nconsole.log(\n  `Overall Balance (Method - array.map().flat().reduce()): ${overallBalanceAlpha}`\n);\n\nconsole.log(' ');\nconsole.log('--- flatMap Method ---');\n\n// flatMap combines both the flat and map method of an array\n// flatMap only goes one level deep\nconst overallBalanceBeta = accounts\n  .flatMap(acc => acc.movements)\n  .reduce((acc, cur, i, _) => acc + cur, 0);\n\nconsole.log(\n  `Overall Balance (Method - array.FlatMap().reduce()): ${overallBalanceBeta}`\n);\n\nconsole.log(' ');\nconsole.log('--- Sorting Arrays ---');\n\nconst owners = ['Jonas', 'Zach', 'Adam', 'Martha'];\nconsole.log(`Original Array: [${owners.join(', ')}]`);\nconsole.log(`Sorted Array: [${owners.sort().join(', ')}]`); // it mutates the array\n\nconsole.log(`Original Array: [${movements.join(', ')}]`);\nconsole.log(`Sorted Array: [${movements.sort().join(', ')}]`); // .sort() workd based on strings\n\nconsole.log(`Original Array: [${movements.join(', ')}]`);\n\n// sorting in ascending order; return 1 if currentValue > nextValue and return -1 if a < b\nconsole.log(\n  `Sorted Array (Ascending Order): [${movements\n    .sort((currentValue, nextValue) => (currentValue > nextValue ? 1 : -1))\n    .join(', ')}]` // return 1 = swap(currentValue, nextValue) || return -1 = noSwap(currentValue, nextValue)\n);\n\n// or\n// movements.sort((a, b) => a - b);\n\n// sorting in descending order; return -1 if currentValue > nextValue and return 1 if a < b\nconsole.log(\n  `Sorted Array (Descending Order): [${movements\n    .sort((currentValue, nextValue) => (currentValue > nextValue ? -1 : 1))\n    .join(', ')}]` // return 1 = swap(currentValue, nextValue) || return -1 = noSwap(currentValue, nextValue)\n);\n\n// or\n// movements.sort((a, b) => b - a);\n\nconsole.log(' ');\nconsole.log('--- Generating Arrays ---');\n\nconst x = new Array(7);\nconsole.log(x);\n\n// Filling array x\nx.fill(Math.trunc(Math.random() * 9) + 1, 0, 2); // fill the array with a random number (0-9) from index 0 - 1 (positing 1 - 2)\nconsole.log(x);\n\nx.fill(Math.trunc(Math.random() * 9) + 1, 2, 3); // fill the array with a random number (0-9) from index 2 - 2 ( at positing 3)\nconsole.log(x);\n\nx.fill(Math.trunc(Math.random() * 9) + 1, 3, 5); // fill the array with a random number (0-9) from position 4 - 5\nconsole.log(x);\n\nx.fill(6, 5, 6); // fill the array with the number 6 at position 6\nconsole.log(x);\n\nx.fill(7, 6); // fill the array with the number 7 at position 7\nconsole.log(x);\n\nconsole.log(' ');\n\nconst y = new Array(9);\nconsole.log(y);\n\nfor (const [i, value] of y.entries()) {\n  y.fill(Math.trunc(Math.random() * 9) + 1);\n  console.log(`Position ${i + 1}, value is : ${value}`);\n}\n\nconsole.log(' ');\n\nconst z = Array.from({ length: 5 }, () => Math.trunc(Math.random() * 9) + 1);\n\nz.forEach((val, i, _) => {\n  console.log(`Position ${i + 1}: ${val}`);\n});\n\nconsole.log(' ');\n\n// generating an array containing elements from 1 - 10 (in that order)\nconst ar3 = Array.from({ length: 10 }, (_, i) => i + 1);\nconsole.log(\n  `Generating an Array, containing elements [${ar3.join(\n    ', '\n  )}] in an ascending order`\n);\n\nconsole.log(' ');\n\nlabelBalance.addEventListener('click', () => {\n  const movementsUI = Array.from(\n    document.querySelectorAll('.movements__value'),\n    el => +el.textContent.replace('€', '')\n  );\n  console.log(movementsUI);\n\n  // OR USE THE SPREAD OPERATOR - to turn the NodeList into an array\n  // const movementsUI = [...document.querySelectorAll('movements__value')];\n  // console.log(movementsUI);\n});\n\nconsole.log('');\nconsole.log('--- Creating a function for creating Title Case ---');\n\nconst convertTitleCase = title => {\n  const capitalize = str => str[0].toUpperCase() + str.slice(1);\n\n  const excecptions = [\n    'a',\n    'am',\n    'an',\n    'but',\n    'for',\n    'in',\n    'is',\n    'it',\n    'of',\n    'on',\n    'or',\n    'the',\n    'to',\n    'we',\n    'who',\n    'with',\n  ];\n\n  const titleCase = title\n    .toLowerCase()\n    .split(' ')\n    .map(word => (!excecptions.includes(word) ? capitalize(word) : word))\n    .join(' ');\n\n  return capitalize(titleCase);\n};\n\nconst examples = [\n  'here is an example of title case',\n  'and here we have, another example',\n  'one of the best ways a person can eat an apple on a warm day, with peak satisafaction is to drink it in a smoothie',\n  'creating a function for creating title case',\n  'i am a boy who likes to code but oftens get tired of it',\n];\n\nconsole.log(`Old sentence: ${examples[0]}`);\nconsole.log(`New sentence: ${convertTitleCase(examples[0])}`);\n\nconsole.log(' ');\n\nconsole.log(`Old sentence: ${examples[1]}`);\nconsole.log(`New sentence: ${convertTitleCase(examples[1])}`);\n\nconsole.log(' ');\n\nconsole.log(`Old sentence: ${examples[2]}`);\nconsole.log(`New sentence: ${convertTitleCase(examples[2])}`);\n\nconsole.log(' ');\n// coding challenge #4\nconsole.log('--- Coding Challenge #4 --- ');\n\nconst dogs = [\n  { weight: 22, curFood: 250, owners: ['Alice', 'Bob'] },\n  { weight: 8, curFood: 200, owners: ['Matilda'] },\n  { weight: 13, curFood: 275, owners: ['Sarah', 'John'] },\n  { weight: 32, curFood: 340, owners: ['Michael'] },\n];\n\n// 1. - Loop over the 'dogs' array containing dog objects, and for each dog, calculate the recommended food portion and add it to the object as a new property. Do not create a new array, simply loop over the array.\ndogs.forEach(dog => (dog.recFood = Math.trunc(dog.weight ** 0.75 * 28)));\n\n// 2. Find Sarah's dog and log to the console whether it's eating too much or too little.\nconst dogSarah = dogs.find(dog => dog.owners.includes('Sarah'));\nconsole.log(dogSarah);\nconsole.log(\n  `Sarah's dog is eating ${\n    dogSarah.curFood > dogSarah.recFood ? 'much' : 'little'\n  }`\n);\n\n// 3. Create an array containing all owners of dogs who eat too much('ownersEatTooMuch') and an array with all owners of dogs who eat too little ('ownersEatTooLittle').\nconst ownersEatTooMuch = dogs\n  .filter(dog => dog.curFood > dog.recFood)\n  .flatMap(dog => dog.owners);\n\nconsole.log(ownersEatTooMuch);\n\nconst ownersEatTooLittle = dogs\n  .filter(dog => dog.curFood < dog.recFood)\n  .flatMap(dog => dog.owners);\n\nconsole.log(ownersEatTooLittle);\n\n// 4. Log a string to the console for each array created in 3., like this: \"Matilda and Alice and Bob's dogs eat too much!\" and \"Sarah and John and Michael's dogs eat too little!\".\nconsole.log(`${ownersEatTooMuch.join(' and ')}'s dogs eat too much!`);\n\nconsole.log(`[${ownersEatTooLittle.join(' and ')}'s dogs eat too little!`);\n\n// 5. Log to the console whether there is any dog eating exactly the amount of food that is recommended (just true or false)\nconst eatingExact = dogs.some(dog => dog.curFood === dog.recFood);\nconsole.log(\n  `Is there any dog eating exactly the amount of food that is recommended: ${eatingExact}`\n);\n\n// 6. Log to the console whether there is any dog eating an okay amount of food (just true or false)\nconst checkEatingOkay = dog =>\n  dog.curFood > dog.recFood * 0.9 && dog.curFood < dog.recFood * 1.1;\n\nconst eatingOkay = dogs.some(checkEatingOkay);\nconsole.log(`Is there any dog eating an okay amount of food: ${eatingOkay}`);\n\n// 7. Create an array containing the dogs that are eating an okay amount of food (try to reuse the condition used in 6.)\n\nconst dogsEatingOkay = dogs.filter(checkEatingOkay);\nconsole.log(dogsEatingOkay);\n\n// 8. Create a shallow copy of the 'dogs' array and sort it by recommended food portion in an ascending order (keep in mind that the portions are inside the array's objects 😉)\nconst dogCopy = dogs.slice().sort((a, b) => a.recFood - b.recFood);\nconsole.log(dogCopy);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}